import React, { FormEvent } from 'react';
import { useLocation, useParams } from 'react-router-dom';
import { useState, useEffect } from 'react';
import axios from 'axios';
import { Button } from '@mui/material';

type InitiProps = {
    name: string;
};

interface InitCountry {
    capital: string[];
    population: number;
    latlng: number[];
    flags: {
        svg: string;
    };
}

interface InitCountryInfo {
    temperature: number;
    weather_icons: string[];
    wind_speed: number;
    precip: number;
}

export const CountryDetails: React.FC = () => {
    const { name } = useParams<InitiProps>();
    const [loading, setLoading] = useState<boolean>(false);
    const [weatherLoading, setWeatherLoading] = useState<boolean>(false);

    const [country, setCountry] = useState<InitCountry>();
    const [weatherInfo, setWeatherInfo] = useState<InitCountryInfo>();

    useEffect(() => {
        getCountryInfo();
    }, []);

    const getCountryInfo = async () => {
        try {
            const response = await axios.get(
                `https://restcountries.com/v3.1/name/${name}`
            );
            const data = response.data;
            setCountry(data.length > 1 ? data[2] : data[0]);
            setLoading(false);
        } catch (error) {
            setLoading(false);
            console.log(error);
        }
    };

    const getWeatherDetails = async (e: FormEvent) => {
        e.preventDefault();

        try {
            setWeatherLoading(true);
            const response = await axios.get(
                `http://api.weatherstack.com/current?access_key=60774ad1b455f3cff7d3f8a273f488f5&query=${country?.capital[0]}`
            );
            setWeatherInfo(response.data);
        } catch (error) {
            console.error(error);
            setWeatherLoading(false);
        }
    };

    return (
        <div className="country-info" data-testid="country">
            <h1>Country Info</h1>
            {loading ? (
                <p>Loading...</p>
            ) : country ? (
                <div className="country-content">
                    <div className="left">
                        <p>Capital: {country.capital[0]}</p>
                        <p>Population: {country.population}</p>
                        <p>
                            Latitude: {country.latlng[0]}
                            <sup>o</sup>
                        </p>
                        <p>
                            Longitude: {country.latlng[1]}
                            <sup>o</sup>
                        </p>
                    </div>

                    <div className="right">
                        <img src={country.flags.svg} alt="_" />
                    </div>
                </div>
            ) : (
                <h3>Country not found by name: {name}</h3>
            )}

            {country && (
                <Button
                    size="medium"
                    variant="contained"
                    onClick={getWeatherDetails}>
                    Capital Weather
                </Button>
            )}

            {weatherInfo ? (
                weatherInfo && (
                    <div className="weather-info">
                        <h3>{country?.capital[0]} Weather Info</h3>
                        <div className="weather-content">
                            <img src={weatherInfo.weather_icons[0]} alt="_" />
                            <p>
                                Temperature: {weatherInfo.temperature}
                                <sup>o</sup>
                            </p>
                            <p>Wind Speed: {weatherInfo.wind_speed}</p>
                            <p>Precip: {weatherInfo.precip}</p>
                        </div>
                    </div>
                )
            ) : (
                <p>Loading...</p>
            )}
        </div>
    );
};
